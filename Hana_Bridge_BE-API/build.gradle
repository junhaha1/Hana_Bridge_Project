plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

ext {
	springBootAdminVersion = "3.1.5"
}

group = 'com.adela'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'com.google.guava:guava:33.0.0-jre'

	// WebClient 기본 모듈 (Spring WebFlux)
	implementation("org.springframework.boot:spring-boot-starter-webflux")
	// Reactor Netty (타임아웃 등 커스터마이징용, 선택적 명시)
	implementation("io.projectreactor.netty:reactor-netty")

	//JWT 의존성
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//모니터링용 의존성
	implementation 'de.codecentric:spring-boot-admin-starter-client'

	//프로메테우스 모니터링 도구
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	//이메일 인증 사용 의존성
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
    
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:$springBootAdminVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
