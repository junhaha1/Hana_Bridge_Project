name: Deploy Hana Project main

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Set up SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KEY_SERVICE }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.PORT_SERVICE }} -H ${{ secrets.HOST_SERVICE }} >> ~/.ssh/known_hosts

      - name: 🧠 Detect changed folders
        id: filter
        run: |
          echo "backend_changed=false" >> $GITHUB_OUTPUT
          echo "frontend_changed=false" >> $GITHUB_OUTPUT
          echo "shared_changed=false" >> $GITHUB_OUTPUT

          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^Hana_Bridge_BE-API/'; then
            echo "backend_changed=true" >> $GITHUB_OUTPUT
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^Hana_Bridge_FE-Cli/'; then
            echo "frontend_changed=true" >> $GITHUB_OUTPUT
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^(.env|docker-compose.yml|MySQL_init/)'; then
            echo "shared_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: 📄 Generate .env file
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "OPENAI_API_MODEL=${{ secrets.OPENAI_API_MODEL }}" >> .env
          echo "OPENAI_API_URL=${{ secrets.OPENAI_API_URL }}" >> .env
          echo "OPENAI_PROMPT_COMMON=${{ secrets.OPENAI_PROMPT_COMMON }}" >> .env
          echo "OPENAI_PROMPT0=${{ secrets.OPENAI_PROMPT0 }}" >> .env
          echo "OPENAI_PROMPT1=${{ secrets.OPENAI_PROMPT1 }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME_SERVICE }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD_SERVICE }}" >> .env
          echo "ROOT_DATABASE_PASSWORD=${{ secrets.ROOT_DATABASE_PASSWORD_SERVICE }}" >> .env
          echo "DATABASE_DB=${{ secrets.DATABASE_DB_SERVICE }}" >> .env
          echo "JWT_ISSUER=${{ secrets.JWT_ISSUER }}" >> .env
          echo "JWT_SECRETKEY=${{ secrets.JWT_SECRETKEY }}" >> .env
          echo "INIT_DB=init.sql" >> .env
          echo "MYSQL_HOST=mysql" >> .env
          echo "REDIS_HOST=redis" >> .env

      - name: 📄 Generate frontend .env.production
        working-directory: Hana_Bridge_FE-Cli
        run: echo "VITE_API_URL=/api" > .env.production

      - name: 🧱 Build Backend
        if: steps.filter.outputs.backend_changed == 'true' || steps.filter.outputs.shared_changed == 'true'
        working-directory: Hana_Bridge_BE-API
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: ⚙️ Build Frontend
        if: steps.filter.outputs.frontend_changed == 'true' || steps.filter.outputs.shared_changed == 'true'
        working-directory: Hana_Bridge_FE-Cli
        run: |
          npm install
          npm run build

      - name: 📦 Prepare deploy folder
        run: |
          mkdir -p deploy/Hana_Bridge_BE-API/build/libs
          mkdir -p deploy/Hana_Bridge_FE-Cli/dist
          mkdir -p deploy/MySQL_init
          cp -r Hana_Bridge_BE-API/build/libs/* deploy/Hana_Bridge_BE-API/build/libs/ || true
          cp -r Hana_Bridge_FE-Cli/dist/* deploy/Hana_Bridge_FE-Cli/dist/ || true
          cp Hana_Bridge_BE-API/Dockerfile deploy/Hana_Bridge_BE-API/
          cp Hana_Bridge_FE-Cli/Dockerfile deploy/Hana_Bridge_FE-Cli/
          cp Hana_Bridge_FE-Cli/nginx.conf deploy/Hana_Bridge_FE-Cli/
          cp -r MySQL_init/* deploy/MySQL_init/
          cp docker-compose.yml deploy/
          cp .env deploy/

      - name: 📂 Upload only changed artifacts to server
        run: |
          if [ "${{ steps.filter.outputs.backend_changed }}" = "true" ] || [ "${{ steps.filter.outputs.shared_changed }}" = "true" ]; then
            echo "🟨 백엔드 변경 → 업로드"
            rsync -avz -e "ssh -p ${{ secrets.PORT_SERVICE }}" \
              deploy/Hana_Bridge_BE-API \
              ${{ secrets.USERNAME_SERVICE }}@${{ secrets.HOST_SERVICE }}:${{ secrets.DEPLOY_PATH_SERVICE }}
          fi

          if [ "${{ steps.filter.outputs.frontend_changed }}" = "true" ] || [ "${{ steps.filter.outputs.shared_changed }}" = "true" ]; then
            echo "🟨 프론트 변경 → 업로드"
            rsync -avz -e "ssh -p ${{ secrets.PORT_SERVICE }}" \
              deploy/Hana_Bridge_FE-Cli \
              ${{ secrets.USERNAME_SERVICE }}@${{ secrets.HOST_SERVICE }}:${{ secrets.DEPLOY_PATH_SERVICE }}
          fi

          if [ "${{ steps.filter.outputs.shared_changed }}" = "true" ]; then
            echo "🟨 공통 파일 변경 → 업로드"
            rsync -avz -e "ssh -p ${{ secrets.PORT_SERVICE }}" \
              deploy/docker-compose.yml deploy/.env deploy/MySQL_init \
              ${{ secrets.USERNAME_SERVICE }}@${{ secrets.HOST_SERVICE }}:${{ secrets.DEPLOY_PATH_SERVICE }}
          fi


      - name: 🐳 Restart Docker Compose
        if: steps.filter.outputs.backend_changed == 'true' || steps.filter.outputs.frontend_changed == 'true' || steps.filter.outputs.shared_changed == 'true'
        run: |
          ssh -p ${{ secrets.PORT_SERVICE }} ${{ secrets.USERNAME_SERVICE }}@${{ secrets.HOST_SERVICE }} "
            cd ${{ secrets.DEPLOY_PATH_SERVICE }} && \
            docker compose pull && \
            docker compose down && \
            docker compose up -d --build
          "

      - name: 📋 Print docker-compose ps
        run: |
          ssh -p ${{ secrets.PORT_SERVICE }} ${{ secrets.USERNAME_SERVICE }}@${{ secrets.HOST_SERVICE }} "cd ${{ secrets.DEPLOY_PATH_SERVICE }} && docker compose ps"
