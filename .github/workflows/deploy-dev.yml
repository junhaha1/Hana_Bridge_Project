name: Deploy Hana Project Dev

on:
  push:
      branches:
        - dev
  pull_request:
    types: [closed]
    branches:
      - dev # dev 브랜치에 merge된 경우만

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Set up SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KEY_DEV }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.PORT_DEV }} -H ${{ secrets.HOST_DEV }} >> ~/.ssh/known_hosts
      
      - name: Test key validity
        run: |
          ssh-keygen -y -f ~/.ssh/id_rsa > /dev/null && echo "✅ SSH 키 정상" || echo "❌ SSH 키 형식 오류"

      - name: 📄 Generate .env file locally
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "OPENAI_API_MODEL=${{ secrets.OPENAI_API_MODEL }}" >> .env
          echo "OPENAI_API_URL=${{ secrets.OPENAI_API_URL }}" >> .env
          echo "OPENAI_PROMPT_COMMON=${{ secrets.OPENAI_PROMPT_COMMON }}" >> .env
          echo "OPENAI_PROMPT0=${{ secrets.OPENAI_PROMPT0 }}" >> .env
          echo "OPENAI_PROMPT1=${{ secrets.OPENAI_PROMPT1 }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME_DEV }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD_DEV }}" >> .env
          echo "ROOT_DATABASE_PASSWORD=${{ secrets.ROOT_DATABASE_PASSWORD_DEV }}" >> .env
          echo "DATABASE_DB=${{ secrets.DATABASE_DB_DEV }}" >> .env
          echo "JWT_ISSUER=${{ secrets.JWT_ISSUER }}" >> .env
          echo "JWT_SECRETKEY=${{ secrets.JWT_SECRETKEY }}" >> .env
          echo "INIT_DB=init_dev.sql" >> .env
          echo "MYSQL_HOST=mysql" >> .env
          
      - name: 🧱 Build Backend
        working-directory: Hana_Bridge_BE-API
        run: ./gradlew build -x test

      - name: ⚙️ Build Frontend
        working-directory: Hana_Bridge_FE-Cli
        run: npm install && npm run build

      - name: 📂 Upload artifacts to server
        run: |
          rsync -avz -e "ssh -p ${{ secrets.PORT_DEV }}" \
            Hana_Bridge_BE-API/build/libs/Hana_Bridge_BE-API-0.0.1.jar \
            Hana_Bridge_FE-Cli/dist/ \
            Hana_Bridge_FE-Cli/nginx.conf \
            MySQL_init/ \
            docker-compose.yml \
            .env \
            ${{ secrets.USERNAME_DEV }}@${{ secrets.HOST_DEV }}:${{ secrets.DEPLOY_PATH_DEV }}

      - name: 🔍 서버에서 .env 확인
        run: |
          ssh -p ${{ secrets.PORT_DEV }} ${{ secrets.USERNAME_DEV }}@${{ secrets.HOST_DEV }} "
            echo '[서버 내 .env 확인]' && \
            cat ${{ secrets.DEPLOY_PATH_DEV }}/.env || echo '❌ .env 파일이 없습니다'
          "
      
